// source: stackify-agent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.stackify.LogGroup', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Container', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Kubernetes', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log.Error', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log.Error.EnvironmentDetail', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log.Error.ErrorItem', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame', null, global);
goog.exportSymbol('proto.stackify.LogGroup.Log.Error.WebRequestDetail', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stackify.LogGroup.repeatedFields_, null);
};
goog.inherits(proto.stackify.LogGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.displayName = 'proto.stackify.LogGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Container = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Container.displayName = 'proto.stackify.LogGroup.Container';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Kubernetes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Kubernetes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Kubernetes.displayName = 'proto.stackify.LogGroup.Kubernetes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stackify.LogGroup.Log.repeatedFields_, null);
};
goog.inherits(proto.stackify.LogGroup.Log, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.displayName = 'proto.stackify.LogGroup.Log';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Log.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.Error.displayName = 'proto.stackify.LogGroup.Log.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Log.Error.EnvironmentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.Error.EnvironmentDetail.displayName = 'proto.stackify.LogGroup.Log.Error.EnvironmentDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log.Error.ErrorItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stackify.LogGroup.Log.Error.ErrorItem.repeatedFields_, null);
};
goog.inherits(proto.stackify.LogGroup.Log.Error.ErrorItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.Error.ErrorItem.displayName = 'proto.stackify.LogGroup.Log.Error.ErrorItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.displayName = 'proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stackify.LogGroup.Log.Error.WebRequestDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stackify.LogGroup.Log.Error.WebRequestDetail.displayName = 'proto.stackify.LogGroup.Log.Error.WebRequestDetail';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stackify.LogGroup.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    environment: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serverName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    applicationLocation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    logger: jspb.Message.getFieldWithDefault(msg, 5, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 6, ""),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.stackify.LogGroup.Log.toObject, includeInstance),
    container: (f = msg.getContainer()) && proto.stackify.LogGroup.Container.toObject(includeInstance, f),
    kubernetes: (f = msg.getKubernetes()) && proto.stackify.LogGroup.Kubernetes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup}
 */
proto.stackify.LogGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup;
  return proto.stackify.LogGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup}
 */
proto.stackify.LogGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationLocation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogger(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 7:
      var value = new proto.stackify.LogGroup.Log;
      reader.readMessage(value,proto.stackify.LogGroup.Log.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    case 8:
      var value = new proto.stackify.LogGroup.Container;
      reader.readMessage(value,proto.stackify.LogGroup.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    case 9:
      var value = new proto.stackify.LogGroup.Kubernetes;
      reader.readMessage(value,proto.stackify.LogGroup.Kubernetes.deserializeBinaryFromReader);
      msg.setKubernetes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServerName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getApplicationLocation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLogger();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.stackify.LogGroup.Log.serializeBinaryToWriter
    );
  }
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.stackify.LogGroup.Container.serializeBinaryToWriter
    );
  }
  f = message.getKubernetes();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.stackify.LogGroup.Kubernetes.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Container.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Container.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Container} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Container.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    imageRepository: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageTag: jspb.Message.getFieldWithDefault(msg, 3, ""),
    containerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    containerName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Container}
 */
proto.stackify.LogGroup.Container.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Container;
  return proto.stackify.LogGroup.Container.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Container}
 */
proto.stackify.LogGroup.Container.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageRepository(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageTag(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Container.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Container.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Container} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Container.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImageRepository();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageTag();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContainerId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContainerName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Container.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Container.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image_repository = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Container.prototype.getImageRepository = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Container.prototype.setImageRepository = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image_tag = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Container.prototype.getImageTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Container.prototype.setImageTag = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string container_id = 4;
 * @return {string}
 */
proto.stackify.LogGroup.Container.prototype.getContainerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Container.prototype.setContainerId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string container_name = 5;
 * @return {string}
 */
proto.stackify.LogGroup.Container.prototype.getContainerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Container.prototype.setContainerName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Kubernetes.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Kubernetes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Kubernetes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Kubernetes.toObject = function(includeInstance, msg) {
  var f, obj = {
    podName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    podNamespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clusterName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Kubernetes}
 */
proto.stackify.LogGroup.Kubernetes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Kubernetes;
  return proto.stackify.LogGroup.Kubernetes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Kubernetes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Kubernetes}
 */
proto.stackify.LogGroup.Kubernetes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPodName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPodNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Kubernetes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Kubernetes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Kubernetes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Kubernetes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPodName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPodNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string pod_name = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Kubernetes.prototype.getPodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Kubernetes.prototype.setPodName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pod_namespace = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Kubernetes.prototype.getPodNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Kubernetes.prototype.setPodNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cluster_name = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Kubernetes.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Kubernetes.prototype.setClusterName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stackify.LogGroup.Log.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, ""),
    threadName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dateMillis: jspb.Message.getFieldWithDefault(msg, 4, 0),
    level: jspb.Message.getFieldWithDefault(msg, 5, ""),
    transactionId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sourceMethod: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sourceLine: jspb.Message.getFieldWithDefault(msg, 8, 0),
    id: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    error: (f = msg.getError()) && proto.stackify.LogGroup.Log.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log}
 */
proto.stackify.LogGroup.Log.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log;
  return proto.stackify.LogGroup.Log.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log}
 */
proto.stackify.LogGroup.Log.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateMillis(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceMethod(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSourceLine(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 11:
      var value = new proto.stackify.LogGroup.Log.Error;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThreadName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDateMillis();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSourceMethod();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSourceLine();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.stackify.LogGroup.Log.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    environmentDetail: (f = msg.getEnvironmentDetail()) && proto.stackify.LogGroup.Log.Error.EnvironmentDetail.toObject(includeInstance, f),
    dateMillis: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errorItem: (f = msg.getErrorItem()) && proto.stackify.LogGroup.Log.Error.ErrorItem.toObject(includeInstance, f),
    webRequestDetail: (f = msg.getWebRequestDetail()) && proto.stackify.LogGroup.Log.Error.WebRequestDetail.toObject(includeInstance, f),
    serverVariablesMap: (f = msg.getServerVariablesMap()) ? f.toObject(includeInstance, undefined) : [],
    customerName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    username: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log.Error}
 */
proto.stackify.LogGroup.Log.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log.Error;
  return proto.stackify.LogGroup.Log.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log.Error}
 */
proto.stackify.LogGroup.Log.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stackify.LogGroup.Log.Error.EnvironmentDetail;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.EnvironmentDetail.deserializeBinaryFromReader);
      msg.setEnvironmentDetail(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateMillis(value);
      break;
    case 3:
      var value = new proto.stackify.LogGroup.Log.Error.ErrorItem;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.ErrorItem.deserializeBinaryFromReader);
      msg.setErrorItem(value);
      break;
    case 4:
      var value = new proto.stackify.LogGroup.Log.Error.WebRequestDetail;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.WebRequestDetail.deserializeBinaryFromReader);
      msg.setWebRequestDetail(value);
      break;
    case 5:
      var value = msg.getServerVariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvironmentDetail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stackify.LogGroup.Log.Error.EnvironmentDetail.serializeBinaryToWriter
    );
  }
  f = message.getDateMillis();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getErrorItem();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stackify.LogGroup.Log.Error.ErrorItem.serializeBinaryToWriter
    );
  }
  f = message.getWebRequestDetail();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.stackify.LogGroup.Log.Error.WebRequestDetail.serializeBinaryToWriter
    );
  }
  f = message.getServerVariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.Error.EnvironmentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log.Error.EnvironmentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationLocation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    configuredApplicationName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    configuredEnvironmentName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log.Error.EnvironmentDetail}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log.Error.EnvironmentDetail;
  return proto.stackify.LogGroup.Log.Error.EnvironmentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log.Error.EnvironmentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log.Error.EnvironmentDetail}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfiguredApplicationName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfiguredEnvironmentName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.Error.EnvironmentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log.Error.EnvironmentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConfiguredApplicationName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConfiguredEnvironmentName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string device_name = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string application_name = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.setApplicationName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string application_location = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.getApplicationLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.setApplicationLocation = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string configured_application_name = 4;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.getConfiguredApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.setConfiguredApplicationName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string configured_environment_name = 5;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.getConfiguredEnvironmentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.EnvironmentDetail.prototype.setConfiguredEnvironmentName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.Error.ErrorItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorTypeCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    sourceMethod: jspb.Message.getFieldWithDefault(msg, 5, ""),
    stacktraceList: jspb.Message.toObjectList(msg.getStacktraceList(),
    proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.toObject, includeInstance),
    innerError: (f = msg.getInnerError()) && proto.stackify.LogGroup.Log.Error.ErrorItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log.Error.ErrorItem}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log.Error.ErrorItem;
  return proto.stackify.LogGroup.Log.Error.ErrorItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log.Error.ErrorItem}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorTypeCode(value);
      break;
    case 4:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceMethod(value);
      break;
    case 6:
      var value = new proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.deserializeBinaryFromReader);
      msg.addStacktrace(value);
      break;
    case 7:
      var value = new proto.stackify.LogGroup.Log.Error.ErrorItem;
      reader.readMessage(value,proto.stackify.LogGroup.Log.Error.ErrorItem.deserializeBinaryFromReader);
      msg.setInnerError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.Error.ErrorItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrorType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorTypeCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSourceMethod();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStacktraceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.serializeBinaryToWriter
    );
  }
  f = message.getInnerError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.stackify.LogGroup.Log.Error.ErrorItem.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeFilename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lineNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    method: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame;
  return proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeFilename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLineNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLineNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string code_filename = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.getCodeFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.setCodeFilename = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 line_number = 2;
 * @return {number}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.getLineNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.setLineNumber = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string method = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error_type = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getErrorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setErrorType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string error_type_code = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getErrorTypeCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setErrorTypeCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.clearDataMap = function() {
  this.getDataMap().clear();
};


/**
 * optional string source_method = 5;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getSourceMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setSourceMethod = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated TraceFrame stacktrace = 6;
 * @return {!Array<!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame>}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getStacktraceList = function() {
  return /** @type{!Array<!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame, 6));
};


/** @param {!Array<!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame>} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setStacktraceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.addStacktrace = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.stackify.LogGroup.Log.Error.ErrorItem.TraceFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.clearStacktraceList = function() {
  this.setStacktraceList([]);
};


/**
 * optional ErrorItem inner_error = 7;
 * @return {?proto.stackify.LogGroup.Log.Error.ErrorItem}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.getInnerError = function() {
  return /** @type{?proto.stackify.LogGroup.Log.Error.ErrorItem} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Log.Error.ErrorItem, 7));
};


/** @param {?proto.stackify.LogGroup.Log.Error.ErrorItem|undefined} value */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.setInnerError = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.clearInnerError = function() {
  this.setInnerError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.Log.Error.ErrorItem.prototype.hasInnerError = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.stackify.LogGroup.Log.Error.WebRequestDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stackify.LogGroup.Log.Error.WebRequestDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIpAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    httpMethod: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requestProtocol: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    requestUrlRoot: jspb.Message.getFieldWithDefault(msg, 5, ""),
    referralUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    cookiesMap: (f = msg.getCookiesMap()) ? f.toObject(includeInstance, undefined) : [],
    querystringMap: (f = msg.getQuerystringMap()) ? f.toObject(includeInstance, undefined) : [],
    postDataMap: (f = msg.getPostDataMap()) ? f.toObject(includeInstance, undefined) : [],
    sessionDataMap: (f = msg.getSessionDataMap()) ? f.toObject(includeInstance, undefined) : [],
    postDataRaw: jspb.Message.getFieldWithDefault(msg, 12, ""),
    mvcAction: jspb.Message.getFieldWithDefault(msg, 13, ""),
    mvcController: jspb.Message.getFieldWithDefault(msg, 14, ""),
    mvcArea: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stackify.LogGroup.Log.Error.WebRequestDetail}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stackify.LogGroup.Log.Error.WebRequestDetail;
  return proto.stackify.LogGroup.Log.Error.WebRequestDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stackify.LogGroup.Log.Error.WebRequestDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stackify.LogGroup.Log.Error.WebRequestDetail}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserIpAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHttpMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestProtocol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestUrlRoot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferralUrl(value);
      break;
    case 7:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 8:
      var value = msg.getCookiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 9:
      var value = msg.getQuerystringMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 10:
      var value = msg.getPostDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 11:
      var value = msg.getSessionDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostDataRaw(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMvcAction(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMvcController(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMvcArea(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stackify.LogGroup.Log.Error.WebRequestDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stackify.LogGroup.Log.Error.WebRequestDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHttpMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequestProtocol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequestUrlRoot();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReferralUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCookiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getQuerystringMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPostDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSessionDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPostDataRaw();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMvcAction();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMvcController();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMvcArea();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string user_ip_address = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getUserIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setUserIpAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string http_method = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getHttpMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setHttpMethod = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string request_protocol = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getRequestProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setRequestProtocol = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string request_url = 4;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getRequestUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setRequestUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string request_url_root = 5;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getRequestUrlRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setRequestUrlRoot = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string referral_url = 6;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getReferralUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setReferralUrl = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, string> headers = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * map<string, string> cookies = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getCookiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.clearCookiesMap = function() {
  this.getCookiesMap().clear();
};


/**
 * map<string, string> querystring = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getQuerystringMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.clearQuerystringMap = function() {
  this.getQuerystringMap().clear();
};


/**
 * map<string, string> post_data = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getPostDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.clearPostDataMap = function() {
  this.getPostDataMap().clear();
};


/**
 * map<string, string> session_data = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getSessionDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.clearSessionDataMap = function() {
  this.getSessionDataMap().clear();
};


/**
 * optional string post_data_raw = 12;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getPostDataRaw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setPostDataRaw = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string mvc_action = 13;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getMvcAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setMvcAction = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string mvc_controller = 14;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getMvcController = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setMvcController = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string mvc_area = 15;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.getMvcArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.WebRequestDetail.prototype.setMvcArea = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional EnvironmentDetail environment_detail = 1;
 * @return {?proto.stackify.LogGroup.Log.Error.EnvironmentDetail}
 */
proto.stackify.LogGroup.Log.Error.prototype.getEnvironmentDetail = function() {
  return /** @type{?proto.stackify.LogGroup.Log.Error.EnvironmentDetail} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Log.Error.EnvironmentDetail, 1));
};


/** @param {?proto.stackify.LogGroup.Log.Error.EnvironmentDetail|undefined} value */
proto.stackify.LogGroup.Log.Error.prototype.setEnvironmentDetail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.Log.Error.prototype.clearEnvironmentDetail = function() {
  this.setEnvironmentDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.Log.Error.prototype.hasEnvironmentDetail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 date_millis = 2;
 * @return {number}
 */
proto.stackify.LogGroup.Log.Error.prototype.getDateMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.stackify.LogGroup.Log.Error.prototype.setDateMillis = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ErrorItem error_item = 3;
 * @return {?proto.stackify.LogGroup.Log.Error.ErrorItem}
 */
proto.stackify.LogGroup.Log.Error.prototype.getErrorItem = function() {
  return /** @type{?proto.stackify.LogGroup.Log.Error.ErrorItem} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Log.Error.ErrorItem, 3));
};


/** @param {?proto.stackify.LogGroup.Log.Error.ErrorItem|undefined} value */
proto.stackify.LogGroup.Log.Error.prototype.setErrorItem = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.Log.Error.prototype.clearErrorItem = function() {
  this.setErrorItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.Log.Error.prototype.hasErrorItem = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional WebRequestDetail web_request_detail = 4;
 * @return {?proto.stackify.LogGroup.Log.Error.WebRequestDetail}
 */
proto.stackify.LogGroup.Log.Error.prototype.getWebRequestDetail = function() {
  return /** @type{?proto.stackify.LogGroup.Log.Error.WebRequestDetail} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Log.Error.WebRequestDetail, 4));
};


/** @param {?proto.stackify.LogGroup.Log.Error.WebRequestDetail|undefined} value */
proto.stackify.LogGroup.Log.Error.prototype.setWebRequestDetail = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.Log.Error.prototype.clearWebRequestDetail = function() {
  this.setWebRequestDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.Log.Error.prototype.hasWebRequestDetail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, string> server_variables = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.stackify.LogGroup.Log.Error.prototype.getServerVariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.stackify.LogGroup.Log.Error.prototype.clearServerVariablesMap = function() {
  this.getServerVariablesMap().clear();
};


/**
 * optional string customer_name = 6;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.prototype.setCustomerName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string username = 7;
 * @return {string}
 */
proto.stackify.LogGroup.Log.Error.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.Error.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setData = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thread_name = 3;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getThreadName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setThreadName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 date_millis = 4;
 * @return {number}
 */
proto.stackify.LogGroup.Log.prototype.getDateMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.stackify.LogGroup.Log.prototype.setDateMillis = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string level = 5;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setLevel = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string transaction_id = 6;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setTransactionId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string source_method = 7;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getSourceMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setSourceMethod = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 source_line = 8;
 * @return {number}
 */
proto.stackify.LogGroup.Log.prototype.getSourceLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.stackify.LogGroup.Log.prototype.setSourceLine = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string id = 9;
 * @return {string}
 */
proto.stackify.LogGroup.Log.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.Log.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string tags = 10;
 * @return {!Array<string>}
 */
proto.stackify.LogGroup.Log.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.stackify.LogGroup.Log.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.stackify.LogGroup.Log.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.stackify.LogGroup.Log.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional Error error = 11;
 * @return {?proto.stackify.LogGroup.Log.Error}
 */
proto.stackify.LogGroup.Log.prototype.getError = function() {
  return /** @type{?proto.stackify.LogGroup.Log.Error} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Log.Error, 11));
};


/** @param {?proto.stackify.LogGroup.Log.Error|undefined} value */
proto.stackify.LogGroup.Log.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.Log.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.Log.prototype.hasError = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string environment = 1;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setEnvironment = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string server_name = 2;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getServerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setServerName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string application_name = 3;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setApplicationName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string application_location = 4;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getApplicationLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setApplicationLocation = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string logger = 5;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getLogger = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setLogger = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string platform = 6;
 * @return {string}
 */
proto.stackify.LogGroup.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.stackify.LogGroup.prototype.setPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Log logs = 7;
 * @return {!Array<!proto.stackify.LogGroup.Log>}
 */
proto.stackify.LogGroup.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.stackify.LogGroup.Log>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stackify.LogGroup.Log, 7));
};


/** @param {!Array<!proto.stackify.LogGroup.Log>} value */
proto.stackify.LogGroup.prototype.setLogsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.stackify.LogGroup.Log=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stackify.LogGroup.Log}
 */
proto.stackify.LogGroup.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.stackify.LogGroup.Log, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.stackify.LogGroup.prototype.clearLogsList = function() {
  this.setLogsList([]);
};


/**
 * optional Container container = 8;
 * @return {?proto.stackify.LogGroup.Container}
 */
proto.stackify.LogGroup.prototype.getContainer = function() {
  return /** @type{?proto.stackify.LogGroup.Container} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Container, 8));
};


/** @param {?proto.stackify.LogGroup.Container|undefined} value */
proto.stackify.LogGroup.prototype.setContainer = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.prototype.clearContainer = function() {
  this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Kubernetes kubernetes = 9;
 * @return {?proto.stackify.LogGroup.Kubernetes}
 */
proto.stackify.LogGroup.prototype.getKubernetes = function() {
  return /** @type{?proto.stackify.LogGroup.Kubernetes} */ (
    jspb.Message.getWrapperField(this, proto.stackify.LogGroup.Kubernetes, 9));
};


/** @param {?proto.stackify.LogGroup.Kubernetes|undefined} value */
proto.stackify.LogGroup.prototype.setKubernetes = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.stackify.LogGroup.prototype.clearKubernetes = function() {
  this.setKubernetes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stackify.LogGroup.prototype.hasKubernetes = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.stackify);
